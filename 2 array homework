An n x n matrix is valid if every row and every column contains all the integers from 1 to n (inclusive).
#include <iostream>
using namespace std;

int validMat(int mat[10][10], int n) {
    for (int i = 0; i < n; i++) {
        int Row[11] = {0};
        int Col[11] = {0};
        for (int j = 0; j < n; j++) {
            int r = mat[i][j];
            int c = mat[j][i];
            if (r < 1 || r > n || Row[r] == 1) return 0;
            if (c < 1 || c > n || Col[c] == 1) return 0;
            Row[r] = 1;
            Col[c] = 1;
        }
    }
    return 1;
}

int main() {
    int n;
    cin >> n;
    int mat[10][10];
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            cin >> mat[i][j];

    if (validMax(mat, n))
        cout << "Valid";
    else
        cout << "Invalid";

    return 0;
}
